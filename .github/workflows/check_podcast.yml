name: Check & Auto-Publish Podcast

on:
  schedule:
    - cron: '*/15 * * * *'  # Kiểm tra mỗi 15 phút
  workflow_dispatch:  # Cho phép chạy thủ công từ GitHub UI
  repository_dispatch:  # Nhận tín hiệu từ Telegram bot
    types: [publish_podcast]

jobs:
  check-podcast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get install curl jq chromium-chromedriver
          pip install playwright
          playwright install chromium

      - name: Check Podcast Status
        run: |
          PODCAST_URL="https://podcasts.apple.com/us/podcast/backlink1dpod/id1786769245"
          TELEGRAM_TOKEN="${{ secrets.TELEGRAM_TOKEN }}"
          CHAT_ID="${{ secrets.CHAT_ID }}"

          RESPONSE=$(curl --write-out "%{http_code}" --silent --output /dev/null $PODCAST_URL)

          if [ "$RESPONSE" -eq 200 ]; then
            echo "✅ Podcast hoạt động bình thường."
          else
            echo "❌ Podcast cần được publish lại."
            # Gửi thông báo Telegram
            curl -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
              -d chat_id=$CHAT_ID \
              -d text="Podcast bị lỗi: Cần được publish lại."

            # Kích hoạt workflow publish_podcast.yml
            curl -X POST -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/actions/workflows/publish_podcast.yml/dispatches \
              -d '{"ref":"main"}'

  auto-publish:
    runs-on: ubuntu-latest
    needs: check-podcast
    if: github.event_name == 'repository_dispatch' && github.event.action == 'publish_podcast'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          pip install playwright
          playwright install chromium

      - name: Auto-Publish Podcast
        run: python publish_podcast.py
